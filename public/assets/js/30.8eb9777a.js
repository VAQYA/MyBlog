(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{627:function(t,e,a){"use strict";a.r(e);var r=a(5),s=Object(r.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h3",{attrs:{id:"上游分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#上游分支"}},[t._v("#")]),t._v(" 上游分支")]),t._v(" "),a("p",[t._v("当前分支是从上游分支开出的新分支")]),t._v(" "),a("h3",{attrs:{id:"master分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#master分支"}},[t._v("#")]),t._v(" master分支")]),t._v(" "),a("p",[t._v("永存、无误、不可直接commit\n对应nfys.kinglian.cn")]),t._v(" "),a("h3",{attrs:{id:"develop分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#develop分支"}},[t._v("#")]),t._v(" develop分支")]),t._v(" "),a("p",[t._v("上游：master\nfeature分支和hotfix分支合并到develop\n永存、无误、不可直接commit")]),t._v(" "),a("h3",{attrs:{id:"feature分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#feature分支"}},[t._v("#")]),t._v(" feature分支")]),t._v(" "),a("p",[t._v("上游：develop\n命名：feature/业务功能名称\n业务完成功能（测试无bug,产品要发布改业务）后，合并到develop")]),t._v(" "),a("h3",{attrs:{id:"test分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#test分支"}},[t._v("#")]),t._v(" test分支")]),t._v(" "),a("ol",[a("li",[t._v("全功能测试分支test/all：")])]),t._v(" "),a("p",[t._v("上游：develop\nfeature分支合并到test分支")]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("部分功能测试分支\n直接使用feature/业务功能名称，部署该分支代码，运维对应不同的端口号")])]),t._v(" "),a("h3",{attrs:{id:"release分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#release分支"}},[t._v("#")]),t._v(" release分支")]),t._v(" "),a("p",[t._v("上游：develop")]),t._v(" "),a("h3",{attrs:{id:"hotfix分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hotfix分支"}},[t._v("#")]),t._v(" hotfix分支")]),t._v(" "),a("p",[t._v("上游：master\n命名：hotfix/修复名称\n完成修复后，merge 到develop，然后merge到master并打tag")]),t._v(" "),a("h3",{attrs:{id:"push-被远程拒绝"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#push-被远程拒绝"}},[t._v("#")]),t._v(" push 被远程拒绝")]),t._v(" "),a("p",[t._v("git pull")]),t._v(" "),a("p",[t._v("git pull origin feature/placeMall_V1.0.08")]),t._v(" "),a("p",[t._v("git pull origin master --allow-unrelated-histories")]),t._v(" "),a("h3",{attrs:{id:"git-pull和git-fetch的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-pull和git-fetch的区别"}},[t._v("#")]),t._v(" git pull和git fetch的区别")]),t._v(" "),a("p",[t._v("相同点："),a("br"),t._v("\n都能够起到更新代码的作用")]),t._v(" "),a("p",[t._v("不同点："),a("br"),t._v("\ngit fetch："),a("br"),t._v("\n从远程获取最新版本到本地，不会自动merge，将远程的版本号commitID更新到本地仓库。"),a("br"),t._v("\n之后，再手动执行merge操作，解决冲突生成一个新的commitID"),a("br"),t._v("\ngit pull："),a("br"),t._v("\n功能上相当于git fetch + git merge"),a("br"),t._v("\n但是，会将本地仓库的commitID更新成远程仓库最新的代码版本")]),t._v(" "),a("p",[t._v("建议：用git fetch + git merge")]),t._v(" "),a("h2",{attrs:{id:"clone人事项目"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#clone人事项目"}},[t._v("#")]),t._v(" clone人事项目")]),t._v(" "),a("p",[t._v("项目地址：https://github.com/lenve/vhr\ngit clone https://github.com/lenve/vhr.git")])])}),[],!1,null,null,null);e.default=s.exports}}]);