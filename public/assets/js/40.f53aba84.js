(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{645:function(t,a,r){"use strict";r.r(a);var s=r(5),v=Object(s.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h3",{attrs:{id:"cap理论"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#cap理论"}},[t._v("#")]),t._v(" CAP理论")]),t._v(" "),r("p",[t._v("C，Consistency 一致性：所有结点在同一时刻的数据完全一致"),r("br"),t._v("\nA，Availability 可用性：服务在正常响应时间内一直可用"),r("br"),t._v("\nP，Partition tolerance 分区容错性：分布式系统在遇到某结点或网络分区故障时，仍然能对外提供满足一致性或可用性的服务")]),t._v(" "),r("p",[t._v("一致性分为强一致性、弱一致性、最终一致性，P中表示的是强一致性。"),r("br"),t._v("\n可用性也分为多个级别，A表示极致可用性。")]),t._v(" "),r("p",[t._v("分布式系统中这三个只能同时满足CP或AP。")]),t._v(" "),r("h3",{attrs:{id:"分布式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#分布式"}},[t._v("#")]),t._v(" 分布式")]),t._v(" "),r("p",[t._v("将一个业务拆分成多个子业务，部署在不同的服务器上；解决高并发带来的问题。\n模块之前独立，各做各的事，便于扩展，复用性高。")]),t._v(" "),r("h3",{attrs:{id:"集群"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#集群"}},[t._v("#")]),t._v(" 集群")]),t._v(" "),r("p",[t._v("将同一业务部署在多台服务器上，如果一台出现问题，另一台可以继续工作；通过负载均衡，设备共同对外提供服务。")]),t._v(" "),r("h3",{attrs:{id:"分布式和集群"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#分布式和集群"}},[t._v("#")]),t._v(" 分布式和集群")]),t._v(" "),r("p",[t._v("分布式是指通过网络连接的多个组件，通过交换信息协作而形成的系统。"),r("br"),t._v("\n而集群，是指同一种组件的多个实例，形成的逻辑上的整体。")]),t._v(" "),r("h3",{attrs:{id:"微服务"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#微服务"}},[t._v("#")]),t._v(" 微服务")]),t._v(" "),r("p",[t._v("把一个大的服务逻辑，解耦合为一个个小的服务，可以是一个服务器，也可以是多个服务器，分布式也属于微服务，只是分布式是多个服务器来分散请求压力。")])])}),[],!1,null,null,null);a.default=v.exports}}]);