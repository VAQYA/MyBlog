(window.webpackJsonp=window.webpackJsonp||[]).push([[84],{702:function(t,n,i){"use strict";i.r(n);var e=i(5),h=Object(e.a)({},(function(){var t=this.$createElement,n=this._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[n("p",[this._v("必须左右都有比它高的柱子"),n("br"),this._v("\n分别取出左右最高的柱子(且比自身高)，比较左右大小，小的减去自身高度便是雨水高度")]),this._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[this._v("class Solution {\n    public int trap(int[] height) {\n        int sum = 0;\n        int length = height.length;\n        for(int i=1; i<length-1; i++){\n            int L = i-1;\n            int R = i+1;\n            int left = 0;\n            int right = 0;\n            while(L>=0){\n                if(height[L]>height[i] && height[L]>left){\n                    left = height[L];\n                }\n                L--;\n            }\n            while(R<=length-1){\n                if(height[R]>height[i] && height[R]>right){\n                    right = height[R];\n                }\n                R++;\n            }\n            int temp = left<right?left:right;\n            if(temp>0){\n                temp = temp - height[i]; //左右分别有比自身高的柱子，则取左右两数的最小值并减去自身高度\n            }\n            sum = sum + temp;\n        }\n        return sum;\n    }\n}\n")])])])])}),[],!1,null,null,null);n.default=h.exports}}]);