(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{618:function(e,a,r){"use strict";r.r(a);var s=r(5),t=Object(s.a)({},(function(){var e=this,a=e.$createElement,r=e._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"web-service"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#web-service"}},[e._v("#")]),e._v(" Web Service")]),e._v(" "),r("p",[e._v("就是一个应用程序，它向外界暴露出一个能够通过web进行调用的API。")]),e._v(" "),r("h2",{attrs:{id:"wsdl"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#wsdl"}},[e._v("#")]),e._v(" WSDL")]),e._v(" "),r("p",[e._v("WSDL(Web Services Description Language), web服务描述语言，它是webservice服务端使用说明书，"),r("br"),e._v("\n说明服务端接口、方法、参数和返回值，WSDL是随服务发布成功自动生成的，无需编写。")]),e._v(" "),r("p",[e._v("Service：相关端口的集合，包括其关联的接口、操作、消息等。")]),e._v(" "),r("p",[e._v("Binding：特定端口类型的具体协议和数据格式规范")]),e._v(" "),r("p",[e._v("portType: 服务端点，描述 web service可被执行的操作方法，以及相关的消息，通过binding指向portType")]),e._v(" "),r("p",[e._v("message: 定义一个操作（方法）的数据参数")]),e._v(" "),r("p",[e._v("types: 定义 web service 使用的全部数据类型")]),e._v(" "),r("h2",{attrs:{id:"根据服务端wsdl地址自动生成客户端代码"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#根据服务端wsdl地址自动生成客户端代码"}},[e._v("#")]),e._v(" 根据服务端wsdl地址自动生成客户端代码")]),e._v(" "),r("p",[e._v("wsdl2java -encoding utf-8 -verbose http://10.42.1.211/skwebsrv/skwebsrv.asmx?wsdl")]),e._v(" "),r("p",[e._v("-p 也就是package 对应java中的包"),r("br"),e._v("\n-d 输入目录,生成.java文件会在该目录,会自动添加-p参数配置的包路径"),r("br"),e._v("\n-client 生成客户端测试web service的代码."),r("br"),e._v("\n-server 生成服务器启动web service的代码."),r("br"),e._v("\n-impl 生成web service的实现代码."),r("br"),e._v("\n-ant  生成build.xml文件."),r("br"),e._v("\n-all 生成上面-client -server -impl -ant 对应的所有文件.")]),e._v(" "),r("h2",{attrs:{id:"soap"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#soap"}},[e._v("#")]),e._v(" SOAP")]),e._v(" "),r("p",[e._v("SOAP规范定义了SOAP消息的格式，以及怎样通过HTTP协议来使用SOAP。"),r("br"),e._v("\nSOAP也是基于XML（标准通用标记语言下的一个子集）和XSD的，XML是SOAP的数据编码方式。"),r("br"),e._v("\nSOAP不是WebService的专有协议\nSOAP = Http + XML")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("必需的 Envelope 元素  // 可把此 XML 文档标识为一条 SOAP 消息\n可选的 Header 元素  // 包含头部信息\n必需的 Body 元素  // 包含所有的调用和响应信息\n可选的 Fault 元素  // 提供有关在处理此消息所发生错误的信息\n\n")])])]),r("h3",{attrs:{id:"jaxwsproxyfactorybean"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#jaxwsproxyfactorybean"}},[e._v("#")]),e._v(" JaxWsProxyFactoryBean")]),e._v(" "),r("p",[e._v("要求服务端的WebService必须是Java代码实现")]),e._v(" "),r("h3",{attrs:{id:"jaxwsdynamicclientfactory"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#jaxwsdynamicclientfactory"}},[e._v("#")]),e._v(" JaxWsDynamicClientFactory")]),e._v(" "),r("p",[e._v("只需要指定服务器端wsdl文件的位置，然后指定要调用的方法和参数即可，不用关心服务器的实现。")]),e._v(" "),r("h3",{attrs:{id:"jaxwsserverfactorybean"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#jaxwsserverfactorybean"}},[e._v("#")]),e._v(" JaxWsServerFactoryBean")]),e._v(" "),r("p",[e._v("用JaxWsServerFactoryBean发布，需要独立的jetty包。")])])}),[],!1,null,null,null);a.default=t.exports}}]);