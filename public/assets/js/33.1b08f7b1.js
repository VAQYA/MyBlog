(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{628:function(a,t,e){"use strict";e.r(t);var i=e(5),s=Object(i.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"bigdeciaml"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bigdeciaml"}},[a._v("#")]),a._v(" BigDeciaml")]),a._v(" "),e("h2",{attrs:{id:"加"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#加"}},[a._v("#")]),a._v(" 加")]),a._v(" "),e("p",[a._v("add")]),a._v(" "),e("h2",{attrs:{id:"减"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#减"}},[a._v("#")]),a._v(" 减")]),a._v(" "),e("p",[a._v("subtract")]),a._v(" "),e("h2",{attrs:{id:"乘"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#乘"}},[a._v("#")]),a._v(" 乘")]),a._v(" "),e("p",[a._v("multiply")]),a._v(" "),e("h2",{attrs:{id:"除"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#除"}},[a._v("#")]),a._v(" 除")]),a._v(" "),e("p",[a._v("// MathContext mc = new MathContext(8, RoundingMode.HALF_DOWN);\nMathContext mc = MathContext.DECIMAL32;")]),a._v(" "),e("p",[a._v("divide(number, mc);  结果为无限小数时，会报错，所以加上mc精确为8位小数")]),a._v(" "),e("h2",{attrs:{id:"零"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#零"}},[a._v("#")]),a._v(" 零")]),a._v(" "),e("p",[a._v("BigDecimal.ZERO")]),a._v(" "),e("h2",{attrs:{id:"setscale-用于格式化小数点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#setscale-用于格式化小数点"}},[a._v("#")]),a._v(" setScale();用于格式化小数点")]),a._v(" "),e("p",[a._v("setScale(1)表示保留一位小数，默认用四舍五入方式\nsetScale(1,BigDecimal.ROUND_DOWN)直接删除多余的小数位，如2.35会变成2.3\nsetScale(1,BigDecimal.ROUND_UP)进位处理，2.35变成2.4\nsetScale(1,BigDecimal.ROUND_HALF_UP)四舍五入，2.35变成2.4\nsetScale(1,BigDecimal.ROUND_HALF_DOWN)四舍五入，2.35变成2.3，如果是5则向下舍")]),a._v(" "),e("h2",{attrs:{id:"signum-判断与0的大小关系"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#signum-判断与0的大小关系"}},[a._v("#")]),a._v(" .signum(); 判断与0的大小关系")]),a._v(" "),e("p",[a._v("返回-1，说明小于0；"),e("br"),a._v("\n返回0，说明等于0；"),e("br"),a._v("\n返回1，说明大于0")]),a._v(" "),e("h2",{attrs:{id:"a-compareto-b-判断两个值的大小关系"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#a-compareto-b-判断两个值的大小关系"}},[a._v("#")]),a._v(" a.compareTo(b); 判断两个值的大小关系")]),a._v(" "),e("p",[a._v("返回-1，说明a小于b；"),e("br"),a._v("\n返回0，说明a等于b；"),e("br"),a._v("\n返回1，说明a大于b")]),a._v(" "),e("h2",{attrs:{id:"执行顺序"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#执行顺序"}},[a._v("#")]),a._v(" 执行顺序")]),a._v(" "),e("p",[a._v("从前到后依次执行")]),a._v(" "),e("p",[a._v('new BigDecimal("3").subtract(new BigDecimal("2")).pow(2);  //结果为1\nnew BigDecimal("3").multiply(new BigDecimal("2")).pow(2);  //结果为36')]),a._v(" "),e("h2",{attrs:{id:"toplainstring"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#toplainstring"}},[a._v("#")]),a._v(" toPlainString()")]),a._v(" "),e("p",[a._v("BigDecimal数据大于9999999时，就会自动转换为科学计数法。\n防止数字自动转化成科学计数法形式")]),a._v(" "),e("h2",{attrs:{id:"保留有效位数和小数点位数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#保留有效位数和小数点位数"}},[a._v("#")]),a._v(" 保留有效位数和小数点位数")]),a._v(" "),e("p",[a._v('BigDecimal a = new BigDecimal("0.01234");\nBigDecimal b = a.setScale(3,RoundingMode.HALF_EVEN);// 0.012 设置保留小数点后3位\nBigDecimal c = a.round(new MathContext(3, RoundingMode.HALF_EVEN)); // 0.0123 保留3位有效位数')]),a._v(" "),e("p",[a._v('BigDecimal d = new BigDecimal("1234");\nBigDecimal e = a.round(new MathContext(3, RoundingMode.HALF_EVEN)); // 1.23E+3 保留3位有效位数')]),a._v(" "),e("h2",{attrs:{id:"保留2位有效位数-并且后面补0"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#保留2位有效位数-并且后面补0"}},[a._v("#")]),a._v(" 保留2位有效位数，并且后面补0")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[a._v('    DecimalFormat decimalFormat = new DecimalFormat("0.000");\n    BigDecimal a = new BigDecimal("1");\n    BigDecimal a1 = new BigDecimal(decimalFormat.format(a)); \n    BigDecimal aa = a1.round(new MathContext(2, RoundingMode.HALF_EVEN)); // 1.0\n')])])]),e("h2",{attrs:{id:"ulp"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ulp"}},[a._v("#")]),a._v(" ulp()")]),a._v(" "),e("p",[a._v('返回末尾的计数单位\nnew BigDecimal("123").ulp(); // 1\nnew BigDecimal("1.2").ulp(); // 0.1\nnew BigDecimal("1.20").ulp(); // 0.01')])])}),[],!1,null,null,null);t.default=s.exports}}]);