(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{620:function(e,n,t){"use strict";t.r(n);var s=t(5),r=Object(s.a)({},(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"websocket"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#websocket"}},[e._v("#")]),e._v(" WebSocket")]),e._v(" "),t("h2",{attrs:{id:"springboot集成websocket"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#springboot集成websocket"}},[e._v("#")]),e._v(" SpringBoot集成WebSocket")]),e._v(" "),t("h3",{attrs:{id:"原生注解方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#原生注解方式"}},[e._v("#")]),e._v(" 原生注解方式")]),e._v(" "),t("h4",{attrs:{id:"pom-xml"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pom-xml"}},[e._v("#")]),e._v(" pom.xml")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("<dependency>\n  <groupId>org.springframework.boot</groupId>\n  <artifactId>spring-boot-starter-websocket</artifactId>\n</dependency>\n")])])]),t("h4",{attrs:{id:"websocketconfig"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#websocketconfig"}},[e._v("#")]),e._v(" WebSocketConfig")]),e._v(" "),t("p",[e._v("通过这个配置类，SpringBoot才能扫描关于WebSocket的注解")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("/*\n * *\n *  * blog.coder4j.cn\n *  * Copyright (C) 2016-2019 All Rights Reserved.\n *\n */\npackage cn.coder4j.study.example.websocket.config;\n\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.web.socket.config.annotation.EnableWebSocket;\nimport org.springframework.web.socket.server.standard.ServerEndpointExporter;\n\n/**\n * @author buhao\n * @version WebSocketConfig.java, v 0.1 2019-10-18 15:45 buhao\n */\n@Configuration\n@EnableWebSocket\npublic class WebSocketConfig {\n\n    @Bean\n    public ServerEndpointExporter serverEndpoint() {\n        return new ServerEndpointExporter();\n    }\n}\n")])])]),t("h4",{attrs:{id:"wsserverendpoint组件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#wsserverendpoint组件"}},[e._v("#")]),e._v(" WsServerEndpoint组件")]),e._v(" "),t("p",[e._v('@ServerEndpoint("/myWs")\n通过这个，Springboot知道暴露出去的ws应用的路径，类似于@RequestMapping();如果启动端口是8080，则可以通过 ws://127.0.0.1:8080/myWs 来连接应用\n@OnOpen\n连接成功后会触发这个注释的方法，该方法有个Session参数\n@OnClose\n连接断开后触发，也有Session参数\n@OnMessage\n客户端发送消息到服务端时，会触发，有个String入参，表示客户端传入的值\n@OnError\n建立连接时出现异常时，会触发，有Session入参')]),e._v(" "),t("p",[e._v("服务端发送消息到客户端：\nimport javax.websocket.Session;\nsession.getBasicRemote().sendText(message);\nsessioin是已经建立过连接的session")]),e._v(" "),t("h3",{attrs:{id:"session"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#session"}},[e._v("#")]),e._v(" Session")]),e._v(" "),t("p",[e._v("WebSocket的Session不能被序列化，所以不能直接放入redis")])])}),[],!1,null,null,null);n.default=r.exports}}]);