(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{586:function(t,r,e){t.exports=e.p+"assets/img/Docker常用命令.b8208d28.png"},661:function(t,r,e){"use strict";e.r(r);var a=e(5),s=Object(a.a)({},(function(){var t=this,r=t.$createElement,a=t._self._c||r;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"docker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker"}},[t._v("#")]),t._v(" Docker")]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"title-dockerdate-2020-10-01tags-tag1categories-docker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#title-dockerdate-2020-10-01tags-tag1categories-docker"}},[t._v("#")]),t._v(" title: Docker\ndate: 2020-10-01\ntags: tag1\ncategories: Docker")]),t._v(" "),a("p",[t._v("软件容器平台")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("可以将一整套环境打包成镜像，无需重复配置环境，解决环境带来的种种问题。")])]),t._v(" "),a("li",[a("p",[t._v("Docker容器之间是进程隔离的，互不影响。")])]),t._v(" "),a("li",[a("p",[t._v("容器通过镜像运行起来，仓库专门存放镜像的。")])])]),t._v(" "),a("h3",{attrs:{id:"容器和虚拟机"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#容器和虚拟机"}},[t._v("#")]),t._v(" 容器和虚拟机")]),t._v(" "),a("p",[t._v("容器：是应用层的，将代码和依赖资源打包在一起，多个容器可以在同一台机器上运行，占用空间较少、瞬间就能完成启动。\n虚拟机：是物理硬件层的，将一台服务器变成多台服务器，多个虚拟机可以在同一台机器上运行，一个虚拟机包含一整台操作系统，占用大量空间、启动较慢。")]),t._v(" "),a("h3",{attrs:{id:"运行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运行"}},[t._v("#")]),t._v(" 运行")]),t._v(" "),a("p",[t._v("docker run hello-world"),a("br"),t._v("\n打印了Hello from Docker！")]),t._v(" "),a("p",[t._v("命令指示docker运行hello-world这个镜像，如果本地没有，就去远端镜像仓库拉取一份hello-world镜像，并生成容器（镜像运行的实例）运行起来，这个实例功能只打印了一句话：Hello from Docker！")]),t._v(" "),a("h3",{attrs:{id:"常用命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用命令"}},[t._v("#")]),t._v(" 常用命令")]),t._v(" "),a("p",[a("img",{attrs:{src:e(586),alt:"Docker常用命令"}})])])}),[],!1,null,null,null);r.default=s.exports}}]);