(window.webpackJsonp=window.webpackJsonp||[]).push([[108],{733:function(t,e,a){"use strict";a.r(e);var r=a(5),s=Object(r.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"get"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#get"}},[t._v("#")]),t._v(" Get")]),t._v(" "),a("h2",{attrs:{id:"post"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#post"}},[t._v("#")]),t._v(" Post")]),t._v(" "),a("p",[t._v("Post中形参为(DetectRecordQuery query),query有一个属性type，没有注解，则入参以form-data形式传入，key=type,value=1")]),t._v(" "),a("h2",{attrs:{id:"requestparam-请求参数-get-post都可以用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#requestparam-请求参数-get-post都可以用"}},[t._v("#")]),t._v(" @RequestParam  请求参数 （Get,Post都可以用）")]),t._v(" "),a("p",[t._v("对应 Body--\x3eform-data中的key、value")]),t._v(" "),a("p",[t._v("form-data中的参数会在HttpServletRequest")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("required 表示是否必须，默认为 true，必须\ndefaultValue 可设置请求参数的默认值\nvalue 为接收url的参数名（相当于key值）\n")])])]),a("h2",{attrs:{id:"requestbody-请求体-用在post"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#requestbody-请求体-用在post"}},[t._v("#")]),t._v(" @RequestBody  请求体 （用在Post)")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("media type: application/json\n\n对应 raw--\x3eJSON 里写Json数据\n\n")])])]),a("h2",{attrs:{id:"pathvariable-路径变量-get-post都可以用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pathvariable-路径变量-get-post都可以用"}},[t._v("#")]),t._v(" @PathVariable  路径变量 Get,Post都可以用）")]),t._v(" "),a("p",[t._v("参数值{id}拼接在路径上")]),t._v(" "),a("p",[t._v("apizza863592923")]),t._v(" "),a("h2",{attrs:{id:"入参"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#入参"}},[t._v("#")]),t._v(" 入参")]),t._v(" "),a("p",[t._v("入参为"),a("code",[t._v("List<String> code")]),t._v("或"),a("code",[t._v("String[] code")]),t._v("\n当传入"),a("code",[t._v('code = "a,b,c"')]),t._v("时，会自动转换为数组，xml中可以直接用"),a("code",[t._v("<foreach>")]),t._v("标签")]),t._v(" "),a("h3",{attrs:{id:"application-x-www-form-urlencoded"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#application-x-www-form-urlencoded"}},[t._v("#")]),t._v(" application/x-www-form-urlencoded")]),t._v(" "),a("p",[t._v('前端：taskDetailIdList:{"a","b"} 后台：\n前端：taskDetailIdList[0]@RequestParam("taskDetailIdList") Long[] taskDetailIdList')]),t._v(" "),a("h3",{attrs:{id:"request转map"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#request转map"}},[t._v("#")]),t._v(" request转map")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("import java.util.HashMap;\nimport java.util.Map;\n\npublic Map<String, Object> convertParameterMap(HttpServletRequest request) {\n    Map<String, String[]> parameterMap = request.getParameterMap();\n    Map<String, Object> convertedMap = new HashMap<>();\n\n    for (Map.Entry<String, String[]> entry : parameterMap.entrySet()) {\n        String key = entry.getKey();\n        String[] values = entry.getValue();\n\n        if (values.length == 1) {\n            // If there's only one value for the parameter, store it as an Object\n            convertedMap.put(key, (Object) values[0]);\n        } else {\n            // If there are multiple values for the parameter, store them as an array of Objects\n            Object[] objects = new Object[values.length];\n            for (int i = 0; i < values.length; i++) {\n                objects[i] = (Object) values[i];\n            }\n            convertedMap.put(key, objects);\n        }\n    }\n\n    return convertedMap;\n}\n\n")])])])])}),[],!1,null,null,null);e.default=s.exports}}]);